{"version":3,"sources":["../../../../../lib/xlsx/xform/drawing/cell-position-xform.js"],"names":["utils","require","BaseXform","IntegerXform","CellPositionXform","module","exports","options","tag","map","ns","zero","inherits","render","xmlStream","model","openNode","col","Math","floor","colOff","row","rowOff","closeNode","parseOpen","node","parser","name","reset","parseText","text","parseClose","undefined"],"mappings":"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","file":"cell-position-xform.js","sourcesContent":["/**\n * Copyright (c) 2016-2017 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\nvar utils = require('../../../utils/utils');\nvar BaseXform = require('../base-xform');\nvar IntegerXform = require('../simple/integer-xform');\n\nvar CellPositionXform = module.exports = function(options) {\n  this.tag = options.tag;\n  this.map = {\n    'col': new IntegerXform({tag: 'col', ns: 'xdr', zero: true}),\n    'colOff': new IntegerXform({tag: 'colOff', ns: 'xdr', zero: true}),\n    'row': new IntegerXform({tag: 'row', ns: 'xdr', zero: true}),\n    'rowOff': new IntegerXform({tag: 'rowOff', ns: 'xdr', zero: true})\n  };\n};\n\nutils.inherits(CellPositionXform, BaseXform, {\n\n  render: function(xmlStream, model) {\n    xmlStream.openNode(this.tag);\n\n    var col = Math.floor(model.col);\n    var colOff = Math.floor((model.col - col) * 640000);\n    this.map['col'].render(xmlStream, col);\n    this.map['colOff'].render(xmlStream, colOff);\n\n    var row = Math.floor(model.row);\n    var rowOff = Math.floor((model.row - row) * 180000);\n    this.map['row'].render(xmlStream, row);\n    this.map['rowOff'].render(xmlStream, rowOff);\n\n    xmlStream.closeNode();\n  },\n\n  parseOpen: function(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case this.tag:\n        this.reset();\n        break;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        break;\n    }\n    return true;\n  },\n\n  parseText: function(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  },\n\n  parseClose: function(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case this.tag:\n        this.model = {\n          col: this.map['col'].model + (this.map['colOff'].model / 640000),\n          row: this.map['row'].model + (this.map['rowOff'].model / 180000)\n        };\n        return false;\n      default:\n        // not quite sure how we get here!\n        return true;\n    }\n  }\n});\n"]}