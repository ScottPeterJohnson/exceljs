{"version":3,"sources":["../../../../../lib/xlsx/xform/simple/float-xform.js"],"names":["utils","require","BaseXform","FloatXform","module","exports","options","tag","ns","attr","attrs","inherits","render","xmlStream","model","undefined","openNode","formatTag","addAttributes","addAttribute","writeText","closeNode","parseOpen","node","name","parseFloat","attributes","text","parseText","push","parseClose","join"],"mappings":"AAAA;;;;;;AAMA;;AAEA,IAAIA,QAAQC,QAAQ,sBAAR,CAAZ;AACA,IAAIC,YAAYD,QAAQ,eAAR,CAAhB;;AAEA,IAAIE,aAAaC,OAAOC,OAAP,GAAiB,UAASC,OAAT,EAAkB;AAClD,OAAKC,GAAL,GAAWD,QAAQC,GAAnB;AACA,OAAKC,EAAL,GAAUF,QAAQE,EAAlB;AACA,OAAKC,IAAL,GAAYH,QAAQG,IAApB;AACA,OAAKC,KAAL,GAAaJ,QAAQI,KAArB;AACD,CALD;;AAOAV,MAAMW,QAAN,CAAeR,UAAf,EAA2BD,SAA3B,EAAsC;;AAEpCU,UAAQ,gBAASC,SAAT,EAAoBC,KAApB,EAA2B;AACjC,QAAIA,UAAUC,SAAd,EAAyB;AACvBF,gBAAUG,QAAV,CAAmB,KAAKC,SAAL,EAAnB;AACA,UAAI,KAAKP,KAAT,EAAgB;AACdG,kBAAUK,aAAV,CAAwB,KAAKR,KAA7B;AACD;AACD,UAAI,KAAKD,IAAT,EAAe;AACbI,kBAAUM,YAAV,CAAuB,KAAKV,IAA5B,EAAkCK,KAAlC;AACD,OAFD,MAEO;AACLD,kBAAUO,SAAV,CAAoBN,KAApB;AACD;AACDD,gBAAUQ,SAAV;AACD;AACF,GAfmC;;AAiBpCC,aAAW,mBAASC,IAAT,EAAe;AACxB,QAAIA,KAAKC,IAAL,KAAc,KAAKjB,GAAvB,EAA4B;AAC1B,UAAI,KAAKE,IAAT,EAAe;AACb,aAAKK,KAAL,GAAaW,WAAWF,KAAKG,UAAL,CAAgB,KAAKjB,IAArB,CAAX,CAAb;AACD,OAFD,MAEO;AACL,aAAKkB,IAAL,GAAY,EAAZ;AACD;AACF;AACF,GAzBmC;AA0BpCC,aAAW,mBAASD,IAAT,EAAe;AACxB,QAAI,CAAC,KAAKlB,IAAV,EAAgB;AACd,WAAKkB,IAAL,CAAUE,IAAV,CAAeF,IAAf;AACD;AACF,GA9BmC;AA+BpCG,cAAY,sBAAW;AACrB,QAAI,CAAC,KAAKrB,IAAV,EAAgB;AACd,WAAKK,KAAL,GAAaW,WAAW,KAAKE,IAAL,CAAUI,IAAV,CAAe,EAAf,CAAX,CAAb;AACD;AACD,WAAO,KAAP;AACD;AApCmC,CAAtC","file":"float-xform.js","sourcesContent":["/**\n * Copyright (c) 2015 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\nvar utils = require('../../../utils/utils');\nvar BaseXform = require('../base-xform');\n\nvar FloatXform = module.exports = function(options) {\n  this.tag = options.tag;\n  this.ns = options.ns;\n  this.attr = options.attr;\n  this.attrs = options.attrs;\n};\n\nutils.inherits(FloatXform, BaseXform, {\n  \n  render: function(xmlStream, model) {\n    if (model !== undefined) {\n      xmlStream.openNode(this.formatTag());\n      if (this.attrs) {\n        xmlStream.addAttributes(this.attrs);\n      }\n      if (this.attr) {\n        xmlStream.addAttribute(this.attr, model);\n      } else {\n        xmlStream.writeText(model);\n      }\n      xmlStream.closeNode();\n    }\n  },\n\n  parseOpen: function(node) {\n    if (node.name === this.tag) {\n      if (this.attr) {\n        this.model = parseFloat(node.attributes[this.attr]);\n      } else {\n        this.text = [];\n      }\n    }\n  },\n  parseText: function(text) {\n    if (!this.attr) {\n      this.text.push(text);\n    }\n  },\n  parseClose: function() {\n    if (!this.attr) {\n      this.model = parseFloat(this.text.join(''));\n    }\n    return false;\n  }\n});\n"]}